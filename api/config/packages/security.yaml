security:
    encoders:
        bcrypt:
            algorithm: bcrypt
            cost: 12
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users:
            id: 'App\Security\Auth\AuthProvider'
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        # Api will be stateless, no token expected because no authentication
        api:
            pattern:  ^/api
            stateless: true
            anonymous: true
            form_login:
                check_path: /api/login
                username_parameter: email
                password_parameter: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure
                require_previous_session: false
        main:
            pattern:  ^/
            anonymous: ~
            logout:
                path: /logout
                target: /login

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        - { path: ^/api/login, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/api, roles: ROLE_USER }
        - { path: ^/user/*, roles: ROLE_USER }
        - { path: ^/manager/*, roles: ROLE_USER }
        - { path: ^/configure/*, roles: ROLE_ADMIN }
        - { path: ^/admin, roles: ROLE_SUPER_ADMIN }

    role_hierarchy:
        ROLE_ADMIN : ROLE_USER
        ROLE_SUPER_ADMIN: ROLE_ADMIN
